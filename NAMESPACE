# Generated by roxygen2: do not edit by hand

S3method(r_to_py,Spectra)
export(CosineGreedy)
export(CosineHungarian)
export(ModifiedCosine)
export(MsBackendPy)
export(NeutralLossesCosine)
export(compareSpectriPy)
export(defaultSpectraVariableMapping)
export(filterSpectriPy)
export(normalize_intensities)
export(pyspec_to_rspec)
export(remove_peaks_around_precursor_mz)
export(rspec_to_pyspec)
export(select_by_intensity)
export(select_by_mz)
export(setSpectraVariableMapping)
exportMethods(compareSpectriPy)
exportMethods(filterSpectriPy)
exportMethods(spectraVariableMapping)
importFrom(IRanges,NumericList)
importFrom(MsCoreUtils,rbindFill)
importFrom(S4Vectors,DataFrame)
importFrom(Spectra,MsBackendMemory)
importFrom(Spectra,coreSpectraVariables)
importFrom(Spectra,fillCoreSpectraVariables)
importFrom(Spectra,spectrapply)
importFrom(methods,as)
importFrom(methods,is)
importFrom(methods,new)
importFrom(reticulate,conda_create)
importFrom(reticulate,conda_list)
importFrom(reticulate,import)
importFrom(reticulate,iterate)
importFrom(reticulate,np_array)
importFrom(reticulate,py)
importFrom(reticulate,py_available)
importFrom(reticulate,py_dict)
importFrom(reticulate,py_eval)
importFrom(reticulate,py_get_attr)
importFrom(reticulate,py_has_attr)
importFrom(reticulate,py_install)
importFrom(reticulate,py_module_available)
importFrom(reticulate,py_run_string)
importFrom(reticulate,py_to_r)
importFrom(reticulate,r_to_py)
importFrom(reticulate,use_condaenv)
importFrom(reticulate,use_virtualenv)
importFrom(reticulate,virtualenv_create)
importFrom(reticulate,virtualenv_exists)
importFrom(reticulate,virtualenv_remove)
importMethodsFrom(ProtGenerics,backendInitialize)
importMethodsFrom(ProtGenerics,peaksData)
importMethodsFrom(ProtGenerics,spectraData)
importMethodsFrom(ProtGenerics,spectraVariables)
importMethodsFrom(Spectra,Spectra)
importMethodsFrom(Spectra,intensity)
importMethodsFrom(Spectra,mz)
importMethodsFrom(Spectra,peaksData)
importMethodsFrom(Spectra,spectraData)
importMethodsFrom(Spectra,spectraVariableMapping)
importMethodsFrom(Spectra,spectrapply)
importMethodsFrom(methods,show)
